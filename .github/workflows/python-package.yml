name: Hyeongwon Python package

on:
  push:
    branches: [ "dev_hyeongwon" ]
  pull_request:
    branches: [ "dev_hyeongwon" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test with pytest
        run: |
          python main.py

      - name: Build and publish Python package
        run: |
          python main.py sdist bdist_wheel
          python -m pip install twine
          python -m twine upload dist/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: saas-weather-application
          path: dist/

  push-docker-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: saas-weather-application
          path: dist

      # Docker 이미지 빌드
      - name: Build Docker image
        run: docker build . -t saas-weather-application:release-dev_hyeongwon-${{ github.sha }}

      # Docker Hub에 로그인
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.HYEONGWON_DOCKER_USERNAME }}
          password: ${{ secrets.HYEONGWON_DOCKER_PASSWORD }}

      # 이미지를 Docker 재태그 및 Hub에 푸시
      - name: Push Docker image to DockerHub
        run: |
          docker tag saas-weather-application:release-dev_hyeongwon-${{ github.sha }} yosigoon/saas-weather:saas-bff-application-release-dev_hyeongwon-${{ github.sha }}
          docker push yosigoon/saas-weather:saas-bff-application-release-dev_hyeongwon-${{ github.sha }}


  update-deployment:
    needs: push-docker-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout saas-kubernetes repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.HYEONGWON_GITHUB_TOKEN }}
          repository: 'saas-in-the-well/saas-kubernetes'
          ref: 'main'

      # 최신 코드 pull 받기
      - name: Pull Latest Code
        run: |
          git pull origin main

      # 쿠버네티스 배포이미지 업데이트
      - name: Update Kubernetes Deployment Image
        run: |
          sed -i 's|yosigoon/saas-weather:.*|yosigoon/saas-bff:saas-weather-application-release-dev_hyeongwon-${{ github.sha }}|' ./kube/hyeongwon/deployment.yaml
          git config --global user.name "yosigoon"
          git config --global user.email "yosigoon@gmail.com"
          git add ./kube/hyeongwon/deployment.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push origin main